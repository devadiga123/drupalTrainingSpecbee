<?php

/**
 * @file
 * Contains field_entity_dependency.module.
 */
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Database\Database;
use Drupal\field_entity_dependency\Plugin\Field\FieldWidget\DependencyDefaultWidget;

/**
 * Implements Hook_form_alter()
 *
 */
function field_entity_dependency_form_alter(&$form, FormStateInterface $form_state) {
  if ($form['#form_id'] === 'entity_form_display_edit_form') {
    $object = $form_state->getFormObject();
    if ($object  && $object->getEntity()) {
      $entity = $object->getEntity();
      $bundle = $entity->getTargetBundle();
      $fields = \Drupal::entityManager()->getFieldDefinitions('node', $bundle);
      foreach ($fields as $field) {
        $type = $field->getType();
        if ($type === 'Dependency') {
          $form['actions']['submit']['#submit'][]  = 'field_entity_dependency_node_form_submit';
        }
      }
    }
  }
}

/**
 * Implements a custom submit action
 *
 */
function field_entity_dependency_node_form_submit($form, FormStateInterface $form_state) {
  $field_name = '';
  $object = $form_state->getFormObject();
  if ($object  && $object->getEntity()) {
    $entity = $object->getEntity();
    $bundle = $entity->getTargetBundle();
    $fields = \Drupal::entityManager()->getFieldDefinitions('node', $bundle);
    foreach ($fields as $field) {
      $type = $field->getType();
      if ($type === 'Dependency') {
        $field_name = $field->getName();
      }
    }
  }
  try {
    // get the current delta
    $delta = DependencyDefaultWidget::getMaxDelta();
    $schema = Database::getConnection()->schema();

    for ($i = 0; $i < $delta; $i++) {
      // adding fields
      $spec = array(
        'type' => 'char',
        'description' => $field_name."_select_child_".$i,
        'length' => 255,
        'not null' => TRUE,
        'default' => '0'
      );

      if (!$schema->fieldExists('node_revision__'.$field_name, $field_name.'_select_child_'.$i)) {
        $schema->addField('node_revision__'.$field_name, $field_name.'_select_child_'.$i, $spec);
      }
      if ($schema->tableExists('node__'.$field_name)) {
        if (!$schema->fieldExists('node__'.$field_name, $field_name.'_select_child_'.$i)) {
          $schema->addField('node__'.$field_name, $field_name.'_select_child_'.$i, $spec);
        }
      }
    }

    // remove the old fields
    for ($i = $delta; $i >= 0; $i++) {
      if ($schema->fieldExists('node_revision__'.$field_name, $field_name.'_select_child_'.$i)) {
        $schema->dropField('node_revision__'.$field_name, $field_name.'_select_child_'.$i);
        if ($schema->tableExists('node__'.$field_name)) {
          $schema->dropField('node__'.$field_name, $field_name.'_select_child_'.$i);
        }
      }
      else {
        if ($schema->tableExists('node__'.$field_name)) {
          if ($schema->fieldExists('node__'.$field_name, $field_name.'_select_child_'.$i)) {
            $schema->dropField('node__'.$field_name, $field_name.'_select_child_'.$i);
          }
          else {
            $i = -2;
          }
        }
        else {
          $i = -2;
        }
      }
    }
  }
  catch (Exception $e) {
    drupal_set_message('Module Error. '.$e->getMessage(), 'error');
  }
}